/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
private:
    ListNode* Helper(ListNode* l1, ListNode* l2, int carry = 0)
    {
        ListNode* ans;
        int sum = 0;
        
        if((l1 == NULL) && (l2 == NULL) && (carry == 0))
            return ans;
        
        if(l1 != NULL)
        {
            sum += l1->val;
            l1 = l1->next;
        }
        
        if(l2 != NULL)
        {
            sum += l2->val;      
            l2 = l2->next;
        }

        sum+= carry;
        ans = new ListNode(sum%10);
        
        if((l1 != NULL) || (l2 != NULL) || (sum/10 != 0))
            ans->next = Helper(l1,l2,(sum/10));
        
        return ans;
    }
    
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode();
        ans = Helper(l1,l2,0);
        
        return ans;
    }
};
