/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = new ListNode();
        ListNode* temp = ans;
        int carry = 0;
        int val = 0;

        while((l1 != NULL) || (l2 != NULL))
        {
            val = 0;
            
            if(l1 == NULL)
                val = l2->val;
            else if(l2 == NULL)
                val = l1->val;
            else
                val = l1->val + l2->val;

            if(carry != 0)
                val+=carry;

            if(val>=10)
            {
                carry = val/10;
                val = val%10;
            }
            else
                carry = false;

            temp->val = val;

            if(l1 != NULL)  l1 = l1->next;
            if(l2 != NULL)  l2 = l2->next;

            if((l1 != NULL) || (l2 != NULL) || (carry != 0))
            {
                temp->next = new ListNode();
                temp = temp->next;                
            }
        }
        
        if(carry != 0)
            temp->val += carry;
        
        return ans;
    }
};
