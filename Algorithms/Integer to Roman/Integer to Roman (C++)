class Solution {
public:
    string intToRoman(int num) 
    {
        char sym[7] = {'I','V','X','L','C','D','M'};
        int div = 1000;
        int index = (sizeof(sym)/sizeof(char)) - 1;
        string ans;

        while(num!=0 && div!=0 && index>=0)
        {
            int quo = num/div;
            num = num % div;

            if(quo>=5)
            {
                //out of range
                if((index+1) >= (sizeof(sym)/sizeof(char)))
                    return ans;

                // >5
                index++;

                if(quo == 9)
                {
                    //out of range
                    if((index+1) >= (sizeof(sym)/sizeof(char)))
                        return ans;

                    // 10 - 1 : IX
                    ans = ans + sym[index-1] + sym[index+1];
                }
                else
                {
                    // 5
                    ans = ans + sym[index];

                    // 1~3
                    for(int i = 0; i < (quo%5); i++)
                        ans = ans + sym[index-1];
                }

                index--;
            }
            else if(quo > 0)
            {
                if(quo == 4)
                {
                    //out of range
                    if((index+1) >= (sizeof(sym)/sizeof(char)))
                        return ans;

                    // 5 - 1: IV
                    ans = ans + sym[index] + sym[index+1];
                }
                else
                {                   
                    // 1~3
                    for(int i = 0; i < (quo%5); i++)
                        ans = ans + sym[index];
                }
            }


            div = div / 10;
            index = index - 2;
        }

        return ans;
    }
};
