class Solution {
public:
    bool Helper(string s, string p)
    {
        int slen = s.length() + 1;
        int plen = p.length() + 1;
		bool dp[slen][plen];
		memset(dp, 0, sizeof(bool)*slen*plen);
		dp[0][0] = true;
        
		for(int i = 0; i <= s.length(); i++)
        {
			for(int j = 1; j <= p.length(); j++)
            {
				if(j > 1 && p[j-1] == '*')
					dp[i][j] = dp[i][j-2] || (i > 0 && (s[i-1] == p[j-2] || p[j-2] == '.') && dp[i-1][j]);
				else
					dp[i][j] = i > 0 && dp[i-1][j-1] && (s[i-1] == p[j-1] || p[j-1] == '.');
				
			}
		}
        
		return dp[slen-1][plen-1];
    }
    
    
    bool isMatch(string s, string p) 
    {
        return Helper(s,p);
    }
};
