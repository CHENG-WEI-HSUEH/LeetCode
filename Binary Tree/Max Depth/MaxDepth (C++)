/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int MaxDepth(TreeNode* root)
    {
        int depth = 0;
        int size = 0;
        queue<TreeNode*> Q1;

        TreeNode* Temp;
        
        //Check Node
        if(root == NULL)
            return depth;
        
        Q1.push(root);
        
        while(!Q1.empty())
        {
            queue<TreeNode*> Q2;
            size = Q1.size();
            for(int i = 0; i < size; i++)
            {
                Temp = Q1.front();           
                Q1.pop();
                
                if(Temp->left != NULL)
                    Q2.push(Temp->left);
                
                if(Temp->right != NULL)
                    Q2.push(Temp->right);
            }
            Q1 = Q2;
            depth++;
        }
        return depth;
    } 
};
