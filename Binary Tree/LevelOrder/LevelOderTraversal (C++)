 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> Q1;
        vector<vector<int>> Answer;
        TreeNode* TempNode;
        int size = 0;
        
        if(root == NULL) return Answer;
        
        //Initial
        Q1.push(root);
        
        while(!Q1.empty())
        {        
            queue<TreeNode*> Q2;
            vector<int> Level_vals;
            
            size = Q1.size();
            for(int i = 0; i < size; i++)
            {
                //Get Node
                TempNode = Q1.front();

                //Get value
                Level_vals.push_back(TempNode->val);

                //Pop out node
                Q1.pop();

                //Check left tree
                if(TempNode->left != NULL)
                    Q2.push(TempNode->left);

                //Check right tree
                if(TempNode->right != NULL)
                    Q2.push(TempNode->right);    
            }
     
            Answer.push_back(Level_vals);
            Q1 = Q2;

        }
        
        return Answer;
    }
};
