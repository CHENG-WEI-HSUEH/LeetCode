/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> Answer = new ArrayList<>();
        List<TreeNode> Q1 = new ArrayList<TreeNode>();
        
        if(root == null) return Answer;
        
        Q1.add(root);
        
        while(!Q1.isEmpty())
        {
            List<Integer> Level = new ArrayList<>();
            List<TreeNode> Q2 = new ArrayList<TreeNode>();
            
            for(TreeNode tempnode: Q1)
            {
                Level.add(tempnode.val);
                
                if(tempnode.left != null)
                    Q2.add(tempnode.left);
                
                if(tempnode.right != null)
                    Q2.add(tempnode.right);      
            }
            
            
            Answer.add(Level);
            Q1 = Q2;
        }
        
        return Answer;
    }
}
